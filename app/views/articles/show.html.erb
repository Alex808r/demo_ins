<h1 class="mb-4">      <%= @article.user.username %> </h1>
<h1 class="mb-4">      <%= @article.title %> </h1>
<p class="lead my-3">  <%= @article.body %>  </p>
<strong> <%= image_tag @article.image_url if @article.image  %></strong>
<hr/>


<p><%= @article.likes.count %> <%= (@article.likes.count) == 1 ? 'Like' : 'Likes' %></p>

<!-- Чтобы отобразить тех, кто поставил лайки, можно использовать такую конструкцию -->
<p > Пост понравился:
  <% @article.likes.each do |art| %>
    <%= art.user.username %>,
  <% end %>
</p>

<%= link_to "Редактировать пост", edit_user_article_path(@user, @article), class: 'btn btn-warning' %>
<%= link_to "Удалить пост", user_article_path(@user, @article), method: :delete, data: {confirm:"Удалить?"}, class: 'btn btn-danger' %>
<%#= link_to "Like", article_likes_path(@article), method: :post,  class: 'btn btn-primary' %>

<% pre_like = @article.likes.find { |like| like.user_id == current_user.id} %>
<% if pre_like %>
  <%= link_to 'Unlike', article_like_path(@article, pre_like), method: :delete, class: 'btn btn-primary' %>
<% else %>
  <%= link_to 'Like', article_likes_path(@article), method: :post, class: 'btn btn-primary' %>
<% end %>


<hr/>

<p>
<h5> Комментарии: </h5>
</p>
<hr/>
<% @article.comments.each do |comment| %>
  <div class="alert-alert-light">
    <!--
    сделаем проверку есть ли у нас user_id в таблице comments и если есть, то выведем имя юзера
    если нет, то не выведем избежав ошибки. Без этой проверки можем получить ошибку при отсутсвии поля user_id
    -->
    <% unless comment.user_id.nil? %>
    <%= User.find(comment.user_id).username  %>
    <% end %>
    <%#= comment.user_id %>
     <p><strong> <%= comment.author %> </strong>
      <%= comment.body %>
      <%#= link_to "Удалить комментарий", [comment.article, comment], method: :delete, data: {confirm:"Удалить?"}, :class => 'btn btn-link' %>
    </p>
    <hr/>
  </div>
<% end %>
<br/>
<hr/>


<h5> Добавить комментарий </h5>


<%= form_with model: [@article, @article.comments.build], local: true do |form| %>

  <p>
    Автор <br>
    <%#= current_user.username %>
<<<<<<< HEAD
    <%= form.text_field(:author, required: :true, minlength: 2, class: 'form-control', placeholder: "Автор") %>
=======
    <%= form.text_field(:author, class: 'form-control', placeholder: "Автор / поле можно убрать") %>
>>>>>>> Add-tests
  </p>
  <p>

    Комментарий <br>
    <%= form.text_area(:body, required: :true, minlength: 1, class: 'form-control', placeholder: "Комментарий") %>
  </p>
  <p>
    <%= form.submit('Добавить комментарий', {:class=>'btn btn-primary'}) %>
  </p>
      <!--
      нужно для того, чтобы вместе с формой создания комментария передать id текущего пользователя,
      который потом используется для отображения имени пользователя, оставившего комментарий User.find(comment.user_id).username
      строка 36 настоящего представления.
      Возможно, такой подход неправильный, так как модели user и comment не связаны на уровне базы данных отношениями
      has many и belongs to
      -->
    <%= form.hidden_field :user_id, value: current_user.id %>

<% end %>